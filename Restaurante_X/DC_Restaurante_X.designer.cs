#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Restaurante_X
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RestaurantX")]
	public partial class DC_Restaurante_XDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertMunicipio(Municipio instance);
    partial void UpdateMunicipio(Municipio instance);
    partial void DeleteMunicipio(Municipio instance);
    partial void InsertDepartamento(Departamento instance);
    partial void UpdateDepartamento(Departamento instance);
    partial void DeleteDepartamento(Departamento instance);
    partial void InsertSexo(Sexo instance);
    partial void UpdateSexo(Sexo instance);
    partial void DeleteSexo(Sexo instance);
    partial void InsertCargo(Cargo instance);
    partial void UpdateCargo(Cargo instance);
    partial void DeleteCargo(Cargo instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertTipoUsuario(TipoUsuario instance);
    partial void UpdateTipoUsuario(TipoUsuario instance);
    partial void DeleteTipoUsuario(TipoUsuario instance);
    partial void InsertEstadoUsuario(EstadoUsuario instance);
    partial void UpdateEstadoUsuario(EstadoUsuario instance);
    partial void DeleteEstadoUsuario(EstadoUsuario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertMesa(Mesa instance);
    partial void UpdateMesa(Mesa instance);
    partial void DeleteMesa(Mesa instance);
    partial void InsertEstadoMesa(EstadoMesa instance);
    partial void UpdateEstadoMesa(EstadoMesa instance);
    partial void DeleteEstadoMesa(EstadoMesa instance);
    #endregion
		
		public DC_Restaurante_XDataContext() : 
				base(global::Restaurante_X.Properties.Settings.Default.RestaurantXConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DC_Restaurante_XDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_Restaurante_XDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_Restaurante_XDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DC_Restaurante_XDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Municipio> Municipio
		{
			get
			{
				return this.GetTable<Municipio>();
			}
		}
		
		public System.Data.Linq.Table<Departamento> Departamento
		{
			get
			{
				return this.GetTable<Departamento>();
			}
		}
		
		public System.Data.Linq.Table<Sexo> Sexo
		{
			get
			{
				return this.GetTable<Sexo>();
			}
		}
		
		public System.Data.Linq.Table<Cargo> Cargo
		{
			get
			{
				return this.GetTable<Cargo>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuario> TipoUsuario
		{
			get
			{
				return this.GetTable<TipoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<EstadoUsuario> EstadoUsuario
		{
			get
			{
				return this.GetTable<EstadoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Mesa> Mesa
		{
			get
			{
				return this.GetTable<Mesa>();
			}
		}
		
		public System.Data.Linq.Table<EstadoMesa> EstadoMesa
		{
			get
			{
				return this.GetTable<EstadoMesa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Municipio")]
	public partial class Municipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMunicipio;
		
		private string _Municipio1;
		
		private int _IdDepto;
		
		private EntitySet<Empleado> _Empleado;
		
		private EntityRef<Departamento> _Departamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMunicipioChanging(int value);
    partial void OnIdMunicipioChanged();
    partial void OnMunicipio1Changing(string value);
    partial void OnMunicipio1Changed();
    partial void OnIdDeptoChanging(int value);
    partial void OnIdDeptoChanged();
    #endregion
		
		public Municipio()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			this._Departamento = default(EntityRef<Departamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMunicipio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMunicipio
		{
			get
			{
				return this._IdMunicipio;
			}
			set
			{
				if ((this._IdMunicipio != value))
				{
					this.OnIdMunicipioChanging(value);
					this.SendPropertyChanging();
					this._IdMunicipio = value;
					this.SendPropertyChanged("IdMunicipio");
					this.OnIdMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Municipio", Storage="_Municipio1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Municipio1
		{
			get
			{
				return this._Municipio1;
			}
			set
			{
				if ((this._Municipio1 != value))
				{
					this.OnMunicipio1Changing(value);
					this.SendPropertyChanging();
					this._Municipio1 = value;
					this.SendPropertyChanged("Municipio1");
					this.OnMunicipio1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDepto", DbType="Int NOT NULL")]
		public int IdDepto
		{
			get
			{
				return this._IdDepto;
			}
			set
			{
				if ((this._IdDepto != value))
				{
					if (this._Departamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDeptoChanging(value);
					this.SendPropertyChanging();
					this._IdDepto = value;
					this.SendPropertyChanged("IdDepto");
					this.OnIdDeptoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Empleado", Storage="_Empleado", ThisKey="IdMunicipio", OtherKey="IdMunicipio")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamento_Municipio", Storage="_Departamento", ThisKey="IdDepto", OtherKey="IdDepto", IsForeignKey=true)]
		public Departamento Departamento
		{
			get
			{
				return this._Departamento.Entity;
			}
			set
			{
				Departamento previousValue = this._Departamento.Entity;
				if (((previousValue != value) 
							|| (this._Departamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamento.Entity = null;
						previousValue.Municipio.Remove(this);
					}
					this._Departamento.Entity = value;
					if ((value != null))
					{
						value.Municipio.Add(this);
						this._IdDepto = value.IdDepto;
					}
					else
					{
						this._IdDepto = default(int);
					}
					this.SendPropertyChanged("Departamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamento")]
	public partial class Departamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDepto;
		
		private string _Departamento1;
		
		private EntitySet<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDeptoChanging(int value);
    partial void OnIdDeptoChanged();
    partial void OnDepartamento1Changing(string value);
    partial void OnDepartamento1Changed();
    #endregion
		
		public Departamento()
		{
			this._Municipio = new EntitySet<Municipio>(new Action<Municipio>(this.attach_Municipio), new Action<Municipio>(this.detach_Municipio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDepto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDepto
		{
			get
			{
				return this._IdDepto;
			}
			set
			{
				if ((this._IdDepto != value))
				{
					this.OnIdDeptoChanging(value);
					this.SendPropertyChanging();
					this._IdDepto = value;
					this.SendPropertyChanged("IdDepto");
					this.OnIdDeptoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Departamento", Storage="_Departamento1", DbType="NVarChar(50)")]
		public string Departamento1
		{
			get
			{
				return this._Departamento1;
			}
			set
			{
				if ((this._Departamento1 != value))
				{
					this.OnDepartamento1Changing(value);
					this.SendPropertyChanging();
					this._Departamento1 = value;
					this.SendPropertyChanged("Departamento1");
					this.OnDepartamento1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamento_Municipio", Storage="_Municipio", ThisKey="IdDepto", OtherKey="IdDepto")]
		public EntitySet<Municipio> Municipio
		{
			get
			{
				return this._Municipio;
			}
			set
			{
				this._Municipio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Departamento = this;
		}
		
		private void detach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Departamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sexo")]
	public partial class Sexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSexo;
		
		private string _Sexo1;
		
		private EntitySet<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSexoChanging(int value);
    partial void OnIdSexoChanged();
    partial void OnSexo1Changing(string value);
    partial void OnSexo1Changed();
    #endregion
		
		public Sexo()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSexo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSexo
		{
			get
			{
				return this._IdSexo;
			}
			set
			{
				if ((this._IdSexo != value))
				{
					this.OnIdSexoChanging(value);
					this.SendPropertyChanging();
					this._IdSexo = value;
					this.SendPropertyChanged("IdSexo");
					this.OnIdSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sexo", Storage="_Sexo1", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Sexo1
		{
			get
			{
				return this._Sexo1;
			}
			set
			{
				if ((this._Sexo1 != value))
				{
					this.OnSexo1Changing(value);
					this.SendPropertyChanging();
					this._Sexo1 = value;
					this.SendPropertyChanged("Sexo1");
					this.OnSexo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Empleado", Storage="_Empleado", ThisKey="IdSexo", OtherKey="IdSexo")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cargo")]
	public partial class Cargo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCargo;
		
		private string _Cargo1;
		
		private EntitySet<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCargoChanging(int value);
    partial void OnIdCargoChanged();
    partial void OnCargo1Changing(string value);
    partial void OnCargo1Changed();
    #endregion
		
		public Cargo()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCargo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCargo
		{
			get
			{
				return this._IdCargo;
			}
			set
			{
				if ((this._IdCargo != value))
				{
					this.OnIdCargoChanging(value);
					this.SendPropertyChanging();
					this._IdCargo = value;
					this.SendPropertyChanged("IdCargo");
					this.OnIdCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Cargo", Storage="_Cargo1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo1
		{
			get
			{
				return this._Cargo1;
			}
			set
			{
				if ((this._Cargo1 != value))
				{
					this.OnCargo1Changing(value);
					this.SendPropertyChanging();
					this._Cargo1 = value;
					this.SendPropertyChanged("Cargo1");
					this.OnCargo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Empleado", Storage="_Empleado", ThisKey="IdCargo", OtherKey="IdCargo")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodEmpleado;
		
		private string _IdEmpleado;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private int _IdMunicipio;
		
		private int _IdCargo;
		
		private int _IdSexo;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntityRef<Cargo> _Cargo;
		
		private EntityRef<Municipio> _Municipio;
		
		private EntityRef<Sexo> _Sexo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodEmpleadoChanging(int value);
    partial void OnCodEmpleadoChanged();
    partial void OnIdEmpleadoChanging(string value);
    partial void OnIdEmpleadoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnIdMunicipioChanging(int value);
    partial void OnIdMunicipioChanged();
    partial void OnIdCargoChanging(int value);
    partial void OnIdCargoChanged();
    partial void OnIdSexoChanging(int value);
    partial void OnIdSexoChanged();
    #endregion
		
		public Empleado()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Cargo = default(EntityRef<Cargo>);
			this._Municipio = default(EntityRef<Municipio>);
			this._Sexo = default(EntityRef<Sexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEmpleado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodEmpleado
		{
			get
			{
				return this._CodEmpleado;
			}
			set
			{
				if ((this._CodEmpleado != value))
				{
					this.OnCodEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._CodEmpleado = value;
					this.SendPropertyChanged("CodEmpleado");
					this.OnCodEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="NVarChar(15)")]
		public string IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMunicipio", DbType="Int NOT NULL")]
		public int IdMunicipio
		{
			get
			{
				return this._IdMunicipio;
			}
			set
			{
				if ((this._IdMunicipio != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMunicipioChanging(value);
					this.SendPropertyChanging();
					this._IdMunicipio = value;
					this.SendPropertyChanged("IdMunicipio");
					this.OnIdMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCargo", DbType="Int NOT NULL")]
		public int IdCargo
		{
			get
			{
				return this._IdCargo;
			}
			set
			{
				if ((this._IdCargo != value))
				{
					if (this._Cargo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCargoChanging(value);
					this.SendPropertyChanging();
					this._IdCargo = value;
					this.SendPropertyChanged("IdCargo");
					this.OnIdCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSexo", DbType="Int NOT NULL")]
		public int IdSexo
		{
			get
			{
				return this._IdSexo;
			}
			set
			{
				if ((this._IdSexo != value))
				{
					if (this._Sexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSexoChanging(value);
					this.SendPropertyChanging();
					this._IdSexo = value;
					this.SendPropertyChanged("IdSexo");
					this.OnIdSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Usuario", Storage="_Usuario", ThisKey="CodEmpleado", OtherKey="CodEmpleado")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Empleado", Storage="_Cargo", ThisKey="IdCargo", OtherKey="IdCargo", IsForeignKey=true)]
		public Cargo Cargo
		{
			get
			{
				return this._Cargo.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo.Entity;
				if (((previousValue != value) 
							|| (this._Cargo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Cargo.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._IdCargo = value.IdCargo;
					}
					else
					{
						this._IdCargo = default(int);
					}
					this.SendPropertyChanged("Cargo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Empleado", Storage="_Municipio", ThisKey="IdMunicipio", OtherKey="IdMunicipio", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._IdMunicipio = value.IdMunicipio;
					}
					else
					{
						this._IdMunicipio = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Empleado", Storage="_Sexo", ThisKey="IdSexo", OtherKey="IdSexo", IsForeignKey=true)]
		public Sexo Sexo
		{
			get
			{
				return this._Sexo.Entity;
			}
			set
			{
				Sexo previousValue = this._Sexo.Entity;
				if (((previousValue != value) 
							|| (this._Sexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexo.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Sexo.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._IdSexo = value.IdSexo;
					}
					else
					{
						this._IdSexo = default(int);
					}
					this.SendPropertyChanged("Sexo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuario")]
	public partial class TipoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuario;
		
		private string _TipoUsuario1;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnTipoUsuario1Changing(string value);
    partial void OnTipoUsuario1Changed();
    #endregion
		
		public TipoUsuario()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TipoUsuario", Storage="_TipoUsuario1", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string TipoUsuario1
		{
			get
			{
				return this._TipoUsuario1;
			}
			set
			{
				if ((this._TipoUsuario1 != value))
				{
					this.OnTipoUsuario1Changing(value);
					this.SendPropertyChanging();
					this._TipoUsuario1 = value;
					this.SendPropertyChanged("TipoUsuario1");
					this.OnTipoUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_Usuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadoUsuario")]
	public partial class EstadoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstadoUsuario;
		
		private string _EstadoUsuario1;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadoUsuarioChanging(int value);
    partial void OnIdEstadoUsuarioChanged();
    partial void OnEstadoUsuario1Changing(string value);
    partial void OnEstadoUsuario1Changed();
    #endregion
		
		public EstadoUsuario()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadoUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEstadoUsuario
		{
			get
			{
				return this._IdEstadoUsuario;
			}
			set
			{
				if ((this._IdEstadoUsuario != value))
				{
					this.OnIdEstadoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdEstadoUsuario = value;
					this.SendPropertyChanged("IdEstadoUsuario");
					this.OnIdEstadoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EstadoUsuario", Storage="_EstadoUsuario1", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string EstadoUsuario1
		{
			get
			{
				return this._EstadoUsuario1;
			}
			set
			{
				if ((this._EstadoUsuario1 != value))
				{
					this.OnEstadoUsuario1Changing(value);
					this.SendPropertyChanging();
					this._EstadoUsuario1 = value;
					this.SendPropertyChanged("EstadoUsuario1");
					this.OnEstadoUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadoUsuario_Usuario", Storage="_Usuario", ThisKey="IdEstadoUsuario", OtherKey="IdEstadoUsuario")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.EstadoUsuario = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.EstadoUsuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Usuario1;
		
		private string _Contraseña;
		
		private System.Nullable<int> _CodEmpleado;
		
		private System.Nullable<int> _IdEstadoUsuario;
		
		private int _IdTipoUsuario;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<EstadoUsuario> _EstadoUsuario;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnCodEmpleadoChanging(System.Nullable<int> value);
    partial void OnCodEmpleadoChanged();
    partial void OnIdEstadoUsuarioChanging(System.Nullable<int> value);
    partial void OnIdEstadoUsuarioChanged();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    #endregion
		
		public Usuario()
		{
			this._Empleado = default(EntityRef<Empleado>);
			this._EstadoUsuario = default(EntityRef<EstadoUsuario>);
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEmpleado", DbType="Int")]
		public System.Nullable<int> CodEmpleado
		{
			get
			{
				return this._CodEmpleado;
			}
			set
			{
				if ((this._CodEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._CodEmpleado = value;
					this.SendPropertyChanged("CodEmpleado");
					this.OnCodEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadoUsuario", DbType="Int")]
		public System.Nullable<int> IdEstadoUsuario
		{
			get
			{
				return this._IdEstadoUsuario;
			}
			set
			{
				if ((this._IdEstadoUsuario != value))
				{
					if (this._EstadoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdEstadoUsuario = value;
					this.SendPropertyChanged("IdEstadoUsuario");
					this.OnIdEstadoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL")]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Usuario", Storage="_Empleado", ThisKey="CodEmpleado", OtherKey="CodEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._CodEmpleado = value.CodEmpleado;
					}
					else
					{
						this._CodEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadoUsuario_Usuario", Storage="_EstadoUsuario", ThisKey="IdEstadoUsuario", OtherKey="IdEstadoUsuario", IsForeignKey=true)]
		public EstadoUsuario EstadoUsuario
		{
			get
			{
				return this._EstadoUsuario.Entity;
			}
			set
			{
				EstadoUsuario previousValue = this._EstadoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._EstadoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadoUsuario.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._EstadoUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdEstadoUsuario = value.IdEstadoUsuario;
					}
					else
					{
						this._IdEstadoUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("EstadoUsuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_TipoUsuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdTipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._IdTipoUsuario = default(int);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mesa")]
	public partial class Mesa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMesa;
		
		private int _Mesa1;
		
		private int _IdEstadoMesa;
		
		private int _IdUsuario;
		
		private System.DateTime _LogTime;
		
		private EntityRef<EstadoMesa> _EstadoMesa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMesaChanging(int value);
    partial void OnIdMesaChanged();
    partial void OnMesa1Changing(int value);
    partial void OnMesa1Changed();
    partial void OnIdEstadoMesaChanging(int value);
    partial void OnIdEstadoMesaChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    #endregion
		
		public Mesa()
		{
			this._EstadoMesa = default(EntityRef<EstadoMesa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMesa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMesa
		{
			get
			{
				return this._IdMesa;
			}
			set
			{
				if ((this._IdMesa != value))
				{
					this.OnIdMesaChanging(value);
					this.SendPropertyChanging();
					this._IdMesa = value;
					this.SendPropertyChanged("IdMesa");
					this.OnIdMesaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Mesa", Storage="_Mesa1", DbType="Int NOT NULL")]
		public int Mesa1
		{
			get
			{
				return this._Mesa1;
			}
			set
			{
				if ((this._Mesa1 != value))
				{
					this.OnMesa1Changing(value);
					this.SendPropertyChanging();
					this._Mesa1 = value;
					this.SendPropertyChanged("Mesa1");
					this.OnMesa1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadoMesa", DbType="Int NOT NULL")]
		public int IdEstadoMesa
		{
			get
			{
				return this._IdEstadoMesa;
			}
			set
			{
				if ((this._IdEstadoMesa != value))
				{
					if (this._EstadoMesa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadoMesaChanging(value);
					this.SendPropertyChanging();
					this._IdEstadoMesa = value;
					this.SendPropertyChanged("IdEstadoMesa");
					this.OnIdEstadoMesaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadoMesa_Mesa", Storage="_EstadoMesa", ThisKey="IdEstadoMesa", OtherKey="IdEstadoMesa", IsForeignKey=true)]
		public EstadoMesa EstadoMesa
		{
			get
			{
				return this._EstadoMesa.Entity;
			}
			set
			{
				EstadoMesa previousValue = this._EstadoMesa.Entity;
				if (((previousValue != value) 
							|| (this._EstadoMesa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadoMesa.Entity = null;
						previousValue.Mesa.Remove(this);
					}
					this._EstadoMesa.Entity = value;
					if ((value != null))
					{
						value.Mesa.Add(this);
						this._IdEstadoMesa = value.IdEstadoMesa;
					}
					else
					{
						this._IdEstadoMesa = default(int);
					}
					this.SendPropertyChanged("EstadoMesa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadoMesa")]
	public partial class EstadoMesa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstadoMesa;
		
		private string _EstadoMesa1;
		
		private EntitySet<Mesa> _Mesa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadoMesaChanging(int value);
    partial void OnIdEstadoMesaChanged();
    partial void OnEstadoMesa1Changing(string value);
    partial void OnEstadoMesa1Changed();
    #endregion
		
		public EstadoMesa()
		{
			this._Mesa = new EntitySet<Mesa>(new Action<Mesa>(this.attach_Mesa), new Action<Mesa>(this.detach_Mesa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadoMesa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEstadoMesa
		{
			get
			{
				return this._IdEstadoMesa;
			}
			set
			{
				if ((this._IdEstadoMesa != value))
				{
					this.OnIdEstadoMesaChanging(value);
					this.SendPropertyChanging();
					this._IdEstadoMesa = value;
					this.SendPropertyChanged("IdEstadoMesa");
					this.OnIdEstadoMesaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EstadoMesa", Storage="_EstadoMesa1", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string EstadoMesa1
		{
			get
			{
				return this._EstadoMesa1;
			}
			set
			{
				if ((this._EstadoMesa1 != value))
				{
					this.OnEstadoMesa1Changing(value);
					this.SendPropertyChanging();
					this._EstadoMesa1 = value;
					this.SendPropertyChanged("EstadoMesa1");
					this.OnEstadoMesa1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadoMesa_Mesa", Storage="_Mesa", ThisKey="IdEstadoMesa", OtherKey="IdEstadoMesa")]
		public EntitySet<Mesa> Mesa
		{
			get
			{
				return this._Mesa;
			}
			set
			{
				this._Mesa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mesa(Mesa entity)
		{
			this.SendPropertyChanging();
			entity.EstadoMesa = this;
		}
		
		private void detach_Mesa(Mesa entity)
		{
			this.SendPropertyChanging();
			entity.EstadoMesa = null;
		}
	}
}
#pragma warning restore 1591
